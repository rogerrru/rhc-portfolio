@import url('https://fonts.googleapis.com/css2?family=Krona+One&family=Lancelot&family=Lexend+Exa:wght@100..900&display=swap');
@import 'tailwindcss';

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}
@tailwind utilities;

@layer base {
    button,
    input,
    select,
    textarea {
        @apply appearance-none bg-transparent border-0 outline-none;
    }
}

@tailwind utilities;

@layer components {
    .all-\[unset\] {
        all: unset;
    }
}

:root {
    --animate-spin: spin 1s linear infinite;
}

.animate-fade-in {
    animation: fade-in 1s var(--animation-delay, 0s) ease forwards;
}

.animate-fade-up {
    animation: fade-up 1s var(--animation-delay, 0s) ease forwards;
}

/*.animate-marquee {*/
/*    animation: marquee var(--duration) infinite linear;*/
/*}*/

.animate-marquee-vertical {
    animation: marquee-vertical var(--duration) linear infinite;
}

.animate-shimmer {
    animation: shimmer 8s infinite;
}

.animate-spin {
    animation: var(--animate-spin);
}

@keyframes spin {
    to {
        transform: rotate(1turn);
    }
}

@keyframes image-glow {
    0% {
        opacity: 0;
        animation-timing-function: cubic-bezier(0.74, 0.25, 0.76, 1);
    }

    10% {
        opacity: 0.7;
        animation-timing-function: cubic-bezier(0.12, 0.01, 0.08, 0.99);
    }

    to {
        opacity: 0.4;
    }
}

@keyframes fade-in {
    0% {
        opacity: 0;
        transform: translateY(-10px);
    }

    to {
        opacity: 1;
        transform: none;
    }
}

@keyframes fade-up {
    0% {
        opacity: 0;
        transform: translateY(20px);
    }

    to {
        opacity: 1;
        transform: none;
    }
}

@keyframes shimmer {
    0%,
    90%,
    to {
        background-position: calc(-100% - var(--shimmer-width)) 0;
    }

    30%,
    60% {
        background-position: calc(100% + var(--shimmer-width)) 0;
    }
}

@keyframes marquee {
    0% {
        transform: translate(0);
    }

    to {
        transform: translateX(calc(-100% - var(--gap)));
    }
}

@keyframes marquee-vertical {
    0% {
        transform: translateY(0);
    }

    to {
        transform: translateY(calc(-100% - var(--gap)));
    }
}
@theme {
    --font-lexend_exa: "Lexend Exa", sans-serif;
    --font-weight-thin: 100;
    --font-weight-extralight: 200;
    --font-weight-light: 300;
    --font-weight-regular: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --font-weight-black: 900;
}

@theme {
    --font-krona-one: "Krona One", sans-serif;
}
@theme {
    --font-lancelot: "Lancelot", serif;
}


@theme {
    --animate-marquee: marquee 20s linear infinite;

    @keyframes marquee {
        0% {
            transform: translateX(0%);
        }
        100% {
            transform: translateX(-50%);
        }
    }
}

@custom-variant dark (&:where(.dark, .dark *));

